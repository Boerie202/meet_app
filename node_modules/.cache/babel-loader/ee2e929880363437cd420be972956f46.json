{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\n\nconst isArray = (value, details) => {\n  if (!Array.isArray(value)) {\n    throw new WorkboxError('not-an-array', details);\n  }\n};\n\nconst hasMethod = (object, expectedMethod, details) => {\n  const type = typeof object[expectedMethod];\n\n  if (type !== 'function') {\n    details['expectedMethod'] = expectedMethod;\n    throw new WorkboxError('missing-a-method', details);\n  }\n};\n\nconst isType = (object, expectedType, details) => {\n  if (typeof object !== expectedType) {\n    details['expectedType'] = expectedType;\n    throw new WorkboxError('incorrect-type', details);\n  }\n};\n\nconst isInstance = (object, expectedClass, details) => {\n  if (!(object instanceof expectedClass)) {\n    details['expectedClass'] = expectedClass;\n    throw new WorkboxError('incorrect-class', details);\n  }\n};\n\nconst isOneOf = (value, validValues, details) => {\n  if (!validValues.includes(value)) {\n    details['validValueDescription'] = `Valid values are ${JSON.stringify(validValues)}.`;\n    throw new WorkboxError('invalid-value', details);\n  }\n};\n\nconst isArrayOfClass = (value, expectedClass, details) => {\n  const error = new WorkboxError('not-array-of-class', details);\n\n  if (!Array.isArray(value)) {\n    throw error;\n  }\n\n  for (const item of value) {\n    if (!(item instanceof expectedClass)) {\n      throw error;\n    }\n  }\n};\n\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n  hasMethod,\n  isArray,\n  isInstance,\n  isOneOf,\n  isType,\n  isArrayOfClass\n};\nexport { finalAssertExports as assert };","map":{"version":3,"names":["WorkboxError","isArray","value","details","Array","hasMethod","object","expectedMethod","type","isType","expectedType","isInstance","expectedClass","isOneOf","validValues","includes","JSON","stringify","isArrayOfClass","error","item","finalAssertExports","process","env","NODE_ENV","assert"],"sources":["C:/Users/matth/Documents/careerfoundry/meet_app/meet/node_modules/workbox-core/_private/assert.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,QAA6B,6BAA7B;AACA,OAAO,gBAAP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;EAChC,IAAI,CAACC,KAAK,CAACH,OAAN,CAAcC,KAAd,CAAL,EAA2B;IACvB,MAAM,IAAIF,YAAJ,CAAiB,cAAjB,EAAiCG,OAAjC,CAAN;EACH;AACJ,CAJD;;AAKA,MAAME,SAAS,GAAG,CAACC,MAAD,EAASC,cAAT,EAAyBJ,OAAzB,KAAqC;EACnD,MAAMK,IAAI,GAAG,OAAOF,MAAM,CAACC,cAAD,CAA1B;;EACA,IAAIC,IAAI,KAAK,UAAb,EAAyB;IACrBL,OAAO,CAAC,gBAAD,CAAP,GAA4BI,cAA5B;IACA,MAAM,IAAIP,YAAJ,CAAiB,kBAAjB,EAAqCG,OAArC,CAAN;EACH;AACJ,CAND;;AAOA,MAAMM,MAAM,GAAG,CAACH,MAAD,EAASI,YAAT,EAAuBP,OAAvB,KAAmC;EAC9C,IAAI,OAAOG,MAAP,KAAkBI,YAAtB,EAAoC;IAChCP,OAAO,CAAC,cAAD,CAAP,GAA0BO,YAA1B;IACA,MAAM,IAAIV,YAAJ,CAAiB,gBAAjB,EAAmCG,OAAnC,CAAN;EACH;AACJ,CALD;;AAMA,MAAMQ,UAAU,GAAG,CAACL,MAAD,EAASM,aAAT,EAAwBT,OAAxB,KAAoC;EACnD,IAAI,EAAEG,MAAM,YAAYM,aAApB,CAAJ,EAAwC;IACpCT,OAAO,CAAC,eAAD,CAAP,GAA2BS,aAA3B;IACA,MAAM,IAAIZ,YAAJ,CAAiB,iBAAjB,EAAoCG,OAApC,CAAN;EACH;AACJ,CALD;;AAMA,MAAMU,OAAO,GAAG,CAACX,KAAD,EAAQY,WAAR,EAAqBX,OAArB,KAAiC;EAC7C,IAAI,CAACW,WAAW,CAACC,QAAZ,CAAqBb,KAArB,CAAL,EAAkC;IAC9BC,OAAO,CAAC,uBAAD,CAAP,GACK,oBAAmBa,IAAI,CAACC,SAAL,CAAeH,WAAf,CAA4B,GADpD;IAEA,MAAM,IAAId,YAAJ,CAAiB,eAAjB,EAAkCG,OAAlC,CAAN;EACH;AACJ,CAND;;AAOA,MAAMe,cAAc,GAAG,CAAChB,KAAD,EAAQU,aAAR,EAAuBT,OAAvB,KAAmC;EACtD,MAAMgB,KAAK,GAAG,IAAInB,YAAJ,CAAiB,oBAAjB,EAAuCG,OAAvC,CAAd;;EACA,IAAI,CAACC,KAAK,CAACH,OAAN,CAAcC,KAAd,CAAL,EAA2B;IACvB,MAAMiB,KAAN;EACH;;EACD,KAAK,MAAMC,IAAX,IAAmBlB,KAAnB,EAA0B;IACtB,IAAI,EAAEkB,IAAI,YAAYR,aAAlB,CAAJ,EAAsC;MAClC,MAAMO,KAAN;IACH;EACJ;AACJ,CAVD;;AAWA,MAAME,kBAAkB,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,IAAxC,GAA+C;EACtEnB,SADsE;EAEtEJ,OAFsE;EAGtEU,UAHsE;EAItEE,OAJsE;EAKtEJ,MALsE;EAMtES;AANsE,CAA1E;AAQA,SAASG,kBAAkB,IAAII,MAA/B"},"metadata":{},"sourceType":"module"}